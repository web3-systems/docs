"use strict";(self.webpackChunk_web3_systems_docs=self.webpackChunk_web3_systems_docs||[]).push([[5166],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),l=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,f=m["".concat(o,".").concat(d)]||m[d]||p[d]||i;return n?r.createElement(f,c(c({ref:t},u),{},{components:n})):r.createElement(f,c({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,c[1]=s;for(var l=2;l<i;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9933:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return l},toc:function(){return u},default:function(){return m}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),c=["components"],s={},o="\ud83d\udd78\ufe0f React Multichain",l={unversionedId:"react-multichain/index",id:"react-multichain/index",title:"\ud83d\udd78\ufe0f React Multichain",description:"CI",source:"@site/docs/react-multichain/index.md",sourceDirName:"react-multichain",slug:"/react-multichain/",permalink:"/react-multichain/",editUrl:"https://github.com/web3-systems/docs/tree/main/docs/react-multichain/index.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Interface: BlockPagination",permalink:"/multiscan-client/interfaces/BlockPagination"},next:{title:"@web3-systems/react-multichain",permalink:"/react-multichain/modules"}},u=[],p={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,c);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\ufe0f-react-multichain"},"\ud83d\udd78\ufe0f React Multichain"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://github.com/web3-systems/react-multichain/actions/workflows/main.yml/badge.svg",alt:"CI"}),"\n",(0,i.kt)("img",{parentName:"p",src:"https://badgen.net/badge/-/TypeScript?icon=typescript&label&labelColor=blue&color=555555",alt:"TS"}),"\n",(0,i.kt)("a",{parentName:"p",href:"http://perso.crans.org/besson/LICENSE.html"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/License-MIT-blue.svg",alt:"GPLv3 license"})),"\n",(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/npm/v/@web3-systems/react-multichain",alt:"npm"})),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"@web3-systems/react-multichain")," ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@web3-systems/react-multichain"},"node module")," is a multichain state management system for Web3 Entity types: Transactions, Contract, Accounts, Logs, Sets and Computations."),(0,i.kt)("h1",{id:"-installation"},"\ud83d\udcbe Installation"),(0,i.kt)("p",null,"Install NPM package:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"npm install @web3-systems/react-multichain\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"yarn add @web3-systems/react-multichain\n")),(0,i.kt)("p",null,"Clone from Github:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"git clone https://github.com/web3-systems/react-multichain\n")),(0,i.kt)("h1",{id:"\ufe0f-quickstart"},"\ud83c\udfce\ufe0f Quickstart"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import * as React from 'react';\nimport { \n  MultiChainProvider, \n  useInitializeDefaultCollections, \n  useGetAccountTransactions \n} from '@web3-systems/react-multichain';\n\nexport const Transactions = () => { \n  const { \n    status, \n    data, \n    meta \n  } = useGetAccountTransactions('0x5ed8cee6b63b1c6afce3ad7c92f4fd7e1b8fad9f', 'from', 1);\n  return(\n    <div>\n        <TransactionsTable data={data} />\n    </div>\n  )\n}\n\nexport const Contracts = () => { \n  const { \n    status, \n    data, \n    meta \n  } = useGetContractABI('0xb9a179DcA5a7bf5f8B9E088437B3A85ebB495eFe', 1);\n  return(\n      <div>\n          {status === 'LOADING' && return <span>Loading...</span>}\n          <ContractRender abi={data} />\n      </div>\n  )\n}\n\nconst InnerProvider = ({children}) => { \n  const isReady = useInitializeDefaultCollections(1)\n  return(\n    <div>\n      {isReady && children}\n      {!isReady && <div>Loading...</div>}\n    </div>\n  )\n}\n\nexport const Providers = () => {\n  const chains = [{\n    chainId: 1,\n    providerUrl: 'https://mainnet.infura.io/v3/INFURA_API_KEY',\n    scannerApiKey: 'ETHERSCAN_API_KEY'\n  }]\n\n  return (\n    <MultiChainProvider chains={chains}>\n      <InnerProvider>\n        <Transactions />\n        <Contracts />\n      </InnerProvider>\n    </MultiChainProvider>\n  );\n};\n\n")),(0,i.kt)("h1",{id:"-developer-experience"},"\ud83d\udcbb Developer Experience"),(0,i.kt)("p",null,"The package is setup using the ",(0,i.kt)("a",{parentName:"p",href:"https://tsdx.io/"},"TSDX zero-config CLI")," which includes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Typescript"),(0,i.kt)("li",{parentName:"ul"},"Rollup"),(0,i.kt)("li",{parentName:"ul"},"Jest"),(0,i.kt)("li",{parentName:"ul"},"Prettier"),(0,i.kt)("li",{parentName:"ul"},"ESLint")))}m.isMDXComponent=!0}}]);