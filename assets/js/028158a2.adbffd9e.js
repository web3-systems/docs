"use strict";(self.webpackChunk_web3_systems_docs=self.webpackChunk_web3_systems_docs||[]).push([[9828],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),o=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=o(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=o(n),d=i,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||l;return n?a.createElement(h,r(r({ref:t},p),{},{components:n})):a.createElement(h,r({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,r[1]=c;for(var o=2;o<l;o++)r[o]=n[o];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8952:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return o},toc:function(){return p},default:function(){return m}});var a=n(7462),i=n(3366),l=(n(7294),n(3905)),r=["components"],c={},s="Multichain Database",o={unversionedId:"multiscan-client/index",id:"multiscan-client/index",title:"Multichain Database",description:"CI",source:"@site/docs/multiscan-client/index.md",sourceDirName:"multiscan-client",slug:"/multiscan-client/",permalink:"/multiscan-client/",editUrl:"https://github.com/web3-systems/docs/tree/main/docs/multiscan-client/index.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Interface: TransactionAndReceipt",permalink:"/multichain-database/interfaces/TransactionAndReceipt"},next:{title:"@web3-systems/multiscan-client",permalink:"/multiscan-client/modules"}},p=[{value:"\ud83d\udcbe Installation",id:"-installation",children:[],level:3},{value:"\ud83c\udfce\ufe0f \xa0Quickstart",id:"\ufe0f-quickstart",children:[],level:3},{value:"Shared API Keys w/ Multiple Chain IDs",id:"shared-api-keys-w-multiple-chain-ids",children:[],level:2},{value:"Initialize",id:"initialize",children:[],level:2},{value:"Multiple Connections",id:"multiple-connections",children:[{value:"\ud83d\udcd6 \xa0Overview",id:"-overview",children:[],level:3},{value:"\ud83e\udde9 \xa0Examples",id:"-examples",children:[],level:3},{value:"\ud83d\udcbb \xa0Developer Experience",id:"-developer-experience",children:[],level:3}],level:2}],u={toc:p};function m(e){var t=e.components,n=(0,i.Z)(e,r);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"multichain-database"},"Multichain Database"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://github.com/web3-systems/multiscan-client/actions/workflows/main.yml/badge.svg",alt:"CI"}),"\n",(0,l.kt)("img",{parentName:"p",src:"https://badgen.net/badge/-/TypeScript?icon=typescript&label&labelColor=blue&color=555555",alt:"TS"}),"\n",(0,l.kt)("a",{parentName:"p",href:"http://perso.crans.org/besson/LICENSE.html"},(0,l.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/License-MIT-blue.svg",alt:"GPLv3 license"})),"\n",(0,l.kt)("a",{parentName:"p",href:"https://npmjs.org/package/@web3-systems/multiscan-client"},(0,l.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@web3-systems/multiscan-client.svg",alt:"Version"})),"\n",(0,l.kt)("a",{parentName:"p",href:"https://npmjs.org/package/@web3-systems/multiscan-client"},(0,l.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/dw/@web3-systems/multiscan-client.svg",alt:"Downloads/week"}))),(0,l.kt)("h3",{id:"-installation"},"\ud83d\udcbe Installation"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"npm install @web3-systems/multiscan-client\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"yarn add @web3-systems/multiscan-client\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"git clone https://github.com/web3-systems/multiscan-client\n")),(0,l.kt)("h3",{id:"\ufe0f-quickstart"},"\ud83c\udfce\ufe0f ","\xa0","Quickstart"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"multiscan-client")," library is built to support multiple Etherscan/Clonescan service API endpoints. Developers can connect to Etherscan, Polygonscan and Avalanche with a single instance."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"MultiscanClient")," class wraps the Etherscan API."),(0,l.kt)("p",null,"Updating function signatures with ",(0,l.kt)("inlineCode",{parentName:"p"},"chainId")," to specify a target API endpoint."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"provider.getAccountBalance('0x000.0000')")," "),(0,l.kt)("p",null,"is now... "),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"multiprovider.getAccountBalance('0x000.0000', 1);")),(0,l.kt)("p",null,"The function signature (",(0,l.kt)("em",{parentName:"p"},"as you can see"),") now consumes ",(0,l.kt)("inlineCode",{parentName:"p"},"chainId")," in the last argument position."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Default Parameters")),(0,l.kt)("p",null,"A new ",(0,l.kt)("inlineCode",{parentName:"p"},"MultiscanClient")," can be initialized with ",(0,l.kt)("inlineCode",{parentName:"p"},"defaultChainId")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"apikey"),"."),(0,l.kt)("h2",{id:"shared-api-keys-w-multiple-chain-ids"},"Shared API Keys w/ Multiple Chain IDs"),(0,l.kt)("p",null,"ChainId supported by a single API endpoint provider (e.x. 1,3,4,5) share an API key. In other words, if you connect to Etherscan Mainnet (chainId: 1) the Etherecan Rinkeby (chainId: 4) is also automatically available."),(0,l.kt)("p",null,"To connect to a new service API provider a new API key must be supplied to the client instance - along with a chainId or provider name."),(0,l.kt)("h2",{id:"initialize"},"Initialize"),(0,l.kt)("p",null,"Chain IDs are mapped to service provider(s)."),(0,l.kt)("p",null,"If chainId ",(0,l.kt)("inlineCode",{parentName:"p"},"1,2,3,4,5,42")," is passed Etherscan is the default client."),(0,l.kt)("p",null,"If chainId ",(0,l.kt)("inlineCode",{parentName:"p"},"137,8001")," is passed Polygonscan is the default client.  "),(0,l.kt)("p",null,"If chainId ",(0,l.kt)("inlineCode",{parentName:"p"},"43114,43114")," is passed Snowtrace is the default client."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"import { MultiscanClient } from '@web3-systems/multiscan-client';\n\nconst client = new MultiscanClient(1, 'etherscan-apikey');\n")),(0,l.kt)("h2",{id:"multiple-connections"},"Multiple Connections"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"import { MultiscanClient } from '@web3-systems/multiscan-client';\n\nlet client: MultiscanClient;\n\n// Set API key and default client for all Etherscan API endpoints: 1,2,3,4,5\nclient = new MultiscanClient(1, 'etherscan-apikey');\n\n// Sets API key for all Polygoncanscan API endpoints: 137, 80001\nclient.setApiKey(137, 'polygonscan-apikey');\n\n// Get Account Balance from default MultiscanClient\nconst balanceEthereum = await client.getAccountBalance('0x000...000');\n\n// Get Account Balance using optional chainId parameter\nconst balancePolygon = await client.getAccountBalance('0x000...000', 137);\nconst balanceMumbai = await client.getAccountBalance('0x000...000', 80001);\n")),(0,l.kt)("h3",{id:"-overview"},"\ud83d\udcd6 ","\xa0","Overview"),(0,l.kt)("p",null,"Coming soon..."),(0,l.kt)("h3",{id:"-examples"},"\ud83e\udde9 ","\xa0","Examples"),(0,l.kt)("p",null,"Coming soon..."),(0,l.kt)("h3",{id:"-developer-experience"},"\ud83d\udcbb ","\xa0","Developer Experience"),(0,l.kt)("p",null,"The package is setup using the ",(0,l.kt)("a",{parentName:"p",href:"https://tsdx.io/"},"TSDX zero-config CLI")," which includes:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Typescript"),(0,l.kt)("li",{parentName:"ul"},"Rollup"),(0,l.kt)("li",{parentName:"ul"},"Jest"),(0,l.kt)("li",{parentName:"ul"},"Prettier"),(0,l.kt)("li",{parentName:"ul"},"ESLint")))}m.isMDXComponent=!0}}]);